{
  "createdAt": "2024-07-22T11:45:13.325Z",
  "updatedAt": "2024-09-23T12:59:45.912Z",
  "id": "vNdauoa2SXR9mNLO",
  "name": "hcloud Volume",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "resource": "volume",
        "id": 0,
        "operation": "create",
        "name": "volume-held-var",
        "automount": true,
        "format": "ext4",
        "location": "nbg1",
        "server": 22211681,
        "size": 100
      },
      "id": "a6e4a456-4701-41ff-8153-4aa1bcb90097",
      "name": "Hetzner Cloud Api1",
      "type": "n8n-nodes-hetznercloud.hetznercloud",
      "typeVersion": 1,
      "position": [
        840,
        1140
      ],
      "credentials": {
        "hetznercloud": {
          "id": "nwHcKcVY2aGeVk21",
          "name": "hcloud WHMCS"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "command": "mkfs.ext4 -F /dev/disk/by-id/scsi-0HC_Volume_"
      },
      "id": "ee887785-0c12-4298-94fc-24612401049a",
      "name": "Make filesystem",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        1180,
        1140
      ],
      "disabled": true
    },
    {
      "parameters": {
        "command": "   /dev/disk/by-id/scsi-0HC_Volume_ /mnt/volume- ext4 defaults,nofail 0 1"
      },
      "id": "d53c9193-4468-498b-a7ac-94b92402c08b",
      "name": "Add volume to fstab",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        1180,
        1380
      ],
      "disabled": true
    },
    {
      "parameters": {},
      "id": "5d73f9e7-71e2-47e1-b1a0-430e9f0dc2ea",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -860,
        -720
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "volumes",
        "options": {}
      },
      "id": "df80fae1-aa5e-438d-a81b-15f85c99bcb7",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        720,
        180
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "name"
            },
            {
              "fieldToAggregate": "size"
            }
          ]
        },
        "options": {}
      },
      "id": "a5146dd2-f2a0-40c2-93ce-4af8fe3ecd2b",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        940,
        180
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "e8c3e464-7abd-4709-bb4d-490dcbfb487e",
      "name": "When chat message received1",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -180,
        700
      ],
      "webhookId": "a633f353-72ce-45ad-aa97-15087b2a8495"
    },
    {
      "parameters": {
        "jsCode": "// Debugging-Ausgabe\nconsole.log(items);\n\n// Sicherstellen, dass es Elemente im items Array gibt\nif (items.length === 0) {\n  return [{ json: { result: 'No data available' } }];\n}\n\nconst input = items[0].json;\n\nlet output = '';\n\n// Sicherstellen, dass es die erwartete Struktur hat\nif (input.name && Array.isArray(input.name) && input.size && Array.isArray(input.size)) {\n  for (let i = 0; i < input.name.length; i++) {\n    output += `* ${input.name[i]}: ${input.size[i]} GB\\n\\n`;\n  }\n} else {\n  output = 'Invalid data structure';\n}\n\n// RÃ¼ckgabe des generierten Textes\nreturn [{ json: { response: output.trim() } }];\n"
      },
      "id": "6bf1e26a-eb9c-4abe-8619-7b32d5d77e87",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1160,
        180
      ]
    },
    {
      "parameters": {
        "name": "CreateVolume",
        "workflowId": "vNdauoa2SXR9mNLO",
        "fields": {
          "values": [
            {
              "name": "action",
              "stringValue": "createVolume"
            }
          ]
        }
      },
      "id": "b0f93650-f889-4f07-826f-37b8606bc1c7",
      "name": "Create volume",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.1,
      "position": [
        520,
        960
      ]
    },
    {
      "parameters": {
        "resource": "volume",
        "id": 0,
        "filters": {}
      },
      "id": "02cba48c-7912-455d-8aa8-5fda48b32825",
      "name": "Get volumes",
      "type": "n8n-nodes-hetznercloud.hetznercloud",
      "typeVersion": 1,
      "position": [
        500,
        180
      ],
      "credentials": {
        "hetznercloud": {
          "id": "nwHcKcVY2aGeVk21",
          "name": "hcloud WHMCS"
        }
      }
    },
    {
      "parameters": {
        "name": "hcloud",
        "workflowId": "vNdauoa2SXR9mNLO",
        "fields": {
          "values": [
            {
              "name": "action",
              "stringValue": "listVolumes"
            }
          ]
        }
      },
      "id": "98f2a601-d712-45a5-9590-05ce61fa019c",
      "name": "List volumes",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.1,
      "position": [
        180,
        960
      ]
    },
    {
      "parameters": {
        "resource": "volume",
        "id": 0,
        "operation": "create",
        "name": "test",
        "location": "nbg1",
        "server": {}
      },
      "id": "56d7e4c4-4154-4dd1-9e98-aca6366d1abc",
      "name": "Create volume1",
      "type": "n8n-nodes-hetznercloud.hetznercloud",
      "typeVersion": 1,
      "position": [
        500,
        -120
      ],
      "credentials": {
        "hetznercloud": {
          "id": "nwHcKcVY2aGeVk21",
          "name": "hcloud WHMCS"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "No action found"
      },
      "id": "38a50f57-e5e6-4bd6-a117-e53487226c43",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        280,
        400
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.action }}",
                    "rightValue": "createVolume",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "1673fbf1-b8cc-446b-b903-fb9c0be9d22c",
                    "leftValue": "={{ $json.action }}",
                    "rightValue": "listVolumes",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "cc879ed7-8723-4207-a3a6-40080c9c1dbd",
                    "leftValue": "={{ $json.action }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notExists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "1e62b278-3719-41eb-9e9e-c2bcd80dd2a8",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        0,
        180
      ]
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "={{ $json.chatInput }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7071258e-3d4f-4c27-995d-7c87fd7c753b",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.4,
      "position": [
        160,
        700
      ],
      "credentials": {
        "openAiApi": {
          "id": "y8NvNd30QFsYf7Hw",
          "name": "OpenAI"
        }
      }
    },
    {
      "parameters": {
        "filters": {},
        "id": 0
      },
      "id": "ef399619-6440-4f9b-bcfc-92167268aef0",
      "name": "Hetzner Cloud Api",
      "type": "n8n-nodes-hetznercloud.hetznercloud",
      "typeVersion": 1,
      "position": [
        -600,
        -120
      ],
      "credentials": {
        "hetznercloud": {
          "id": "nwHcKcVY2aGeVk21",
          "name": "hcloud WHMCS"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "servers",
        "options": {}
      },
      "id": "487aa737-a6fd-49cf-be23-4dd019f6bac3",
      "name": "Split Out1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -380,
        -120
      ]
    },
    {
      "parameters": {
        "options": {
          "headerRow": true
        }
      },
      "id": "f68b524a-d7c1-4ae7-b7e4-028844b185f8",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -160,
        -120
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e8abccc3-e9ea-463e-9095-8cd9a991d997",
              "name": "contexts",
              "value": "['CS','MON','ORG', 'WHMCS']",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "id": "4802f634-884b-42b0-8c86-89a02c14b895",
      "name": "Set contexts",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -640,
        -720
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "contexts",
        "options": {}
      },
      "id": "9500ab5a-a6e3-4f42-82cf-d5506064c9cc",
      "name": "Split Out2",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -420,
        -720
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.contexts }}",
                    "rightValue": "CS",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CS"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "1cf15e4c-b2e5-4037-ba7d-b7b739fb2f58",
                    "leftValue": "={{ $json.contexts }}",
                    "rightValue": "MON",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "MON"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "06ff7146-7b2d-4c34-a93d-c07667bbef1e",
                    "leftValue": "={{ $json.contexts }}",
                    "rightValue": "ORG",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ORG"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "dcf918aa-fa0e-4b9d-9096-431251f7231b",
                    "leftValue": "={{ $json.contexts }}",
                    "rightValue": "WHMCS",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "WHMCS"
            }
          ]
        },
        "options": {}
      },
      "id": "b3c6f0ec-2808-49de-a746-f394d1c74b24",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -200,
        -720
      ]
    },
    {
      "parameters": {
        "resource": "floating_ip",
        "filters": {},
        "id": 0
      },
      "id": "1bc9b790-deaa-4e0c-998b-dbb7201802b2",
      "name": "Hetzner Cloud Api2",
      "type": "n8n-nodes-hetznercloud.hetznercloud",
      "typeVersion": 1,
      "position": [
        100,
        -600
      ],
      "credentials": {
        "hetznercloud": {
          "id": "nwHcKcVY2aGeVk21",
          "name": "hcloud WHMCS"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "floating_ips",
        "options": {}
      },
      "id": "b2e0b034-d29a-4f42-aec0-acd12a19308f",
      "name": "Split Out3",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        360,
        -600
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "071ab660-0b7b-478e-8265-a6b4f503c34c",
              "name": "dns_ptr[0].ip",
              "value": "={{ $json.dns_ptr[0].ip }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": "={{ $json.dns_ptr[0].dns_ptr }}",
        "include": "selected",
        "includeFields": "dns_ptr,server",
        "options": {}
      },
      "id": "5d6e3dc4-1dc0-4662-bea7-1bd4b0b6a8f2",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        580,
        -600
      ]
    }
  ],
  "connections": {
    "Hetzner Cloud Api1": {
      "main": [
        [
          {
            "node": "Make filesystem",
            "type": "main",
            "index": 0
          },
          {
            "node": "Add volume to fstab",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Set contexts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received1": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create volume": {
      "ai_tool": [
        [
          {
            "node": "OpenAI",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get volumes": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List volumes": {
      "ai_tool": [
        [
          {
            "node": "OpenAI",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Create volume1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get volumes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Hetzner Cloud Api": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set contexts": {
      "main": [
        [
          {
            "node": "Split Out2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out2": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [],
        [],
        [],
        [
          {
            "node": "Hetzner Cloud Api2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Hetzner Cloud Api2": {
      "main": [
        [
          {
            "node": "Split Out3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out3": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "oXwbRnZHgYHUkKj4"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "5117988f-a835-45f4-9f73-3bea562140ab",
  "triggerCount": 2,
  "tags": [
    {
      "createdAt": "2024-07-22T06:04:30.790Z",
      "updatedAt": "2024-07-22T06:04:30.790Z",
      "id": "0T7Op5ZKbBRZRiWZ",
      "name": "hetzner"
    }
  ]
}