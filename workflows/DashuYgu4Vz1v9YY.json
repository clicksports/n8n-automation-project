{
  "createdAt": "2024-07-25T13:22:57.253Z",
  "updatedAt": "2024-08-05T14:42:10.000Z",
  "id": "DashuYgu4Vz1v9YY",
  "name": "Annual invoice split1",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {}
      },
      "id": "5a4b96c2-efc8-464f-acea-6294cf4f2ea5",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        1040,
        1880
      ],
      "typeVersion": 1,
      "credentials": {
        "openAiApi": {
          "id": "y8NvNd30QFsYf7Hw",
          "name": "OpenAI"
        }
      }
    },
    {
      "parameters": {
        "dataType": "binary",
        "loader": "pdfLoader",
        "options": {
          "splitPages": true,
          "metadata": {
            "metadataValues": [
              {
                "name": "filename",
                "value": "={{ $('Download file').item.json.name }}"
              }
            ]
          }
        }
      },
      "id": "b66a9700-463e-4ed0-9515-df77cdfe46b1",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        1220,
        1880
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "id": "b93635d8-bafc-4843-9617-aa16e7b8e970",
      "name": "Download file",
      "type": "n8n-nodes-base.googleDrive",
      "position": [
        800,
        1660
      ],
      "typeVersion": 3,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "BVkiHtheS61uART6",
          "name": "Google christian.gick@clicksports.de"
        }
      }
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "returnAll": true,
        "filter": {
          "folderId": {
            "__rl": true,
            "value": "1--InOSXqwW1vm0z7D-HLHzAqy57ju2BX",
            "mode": "list",
            "cachedResultName": "n8n",
            "cachedResultUrl": "https://drive.google.com/drive/folders/1--InOSXqwW1vm0z7D-HLHzAqy57ju2BX"
          }
        },
        "options": {}
      },
      "id": "547f5e57-29a1-490a-a5f8-5ada3a9134bb",
      "name": "Google Drive",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        240,
        1800
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "BVkiHtheS61uART6",
          "name": "Google christian.gick@clicksports.de"
        }
      }
    },
    {
      "parameters": {},
      "id": "5acce4a2-0ac4-4f7f-aa42-497d5f5d0574",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -80,
        740
      ]
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1pvMisn__G4QvkcRX2oj7znz4S7WcXzxi6GJNihvr0lw",
          "mode": "list",
          "cachedResultName": "n8n",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1pvMisn__G4QvkcRX2oj7znz4S7WcXzxi6GJNihvr0lw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1619249675,
          "mode": "list",
          "cachedResultName": "invoices",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1pvMisn__G4QvkcRX2oj7znz4S7WcXzxi6GJNihvr0lw/edit#gid=1619249675"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [
            "ID"
          ],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Bezeichnung der Position",
              "displayName": "Bezeichnung der Position",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Jahr",
              "displayName": "Jahr",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Zeitraum",
              "displayName": "Zeitraum",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Anzahl Tage",
              "displayName": "Anzahl Tage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Betrag pro Tag",
              "displayName": "Betrag pro Tag",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Nettobetrag",
              "displayName": "Nettobetrag",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Bruttobetrag",
              "displayName": "Bruttobetrag",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Enthaltene Umsatzsteuer",
              "displayName": "Enthaltene Umsatzsteuer",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {
          "useAppend": true
        }
      },
      "id": "42568233-9bed-4d4b-b865-5d644f61c11d",
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.4,
      "position": [
        3540,
        1800
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "FsAH6WckeSIuyyxJ",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "491e16f4-1ee3-495f-ba3b-50cbd451e76f",
              "leftValue": "={{ $json.name }}",
              "rightValue": "_GS-",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "27bebd5a-7a85-4eb2-880c-b7c365a1675a",
              "leftValue": "={{ $json.name }}",
              "rightValue": "_RE-",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "da2f6fdf-7c18-4b8d-b759-5970c778c35b",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        500,
        1800
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {}
      },
      "id": "d4e1c44d-5649-4e49-a6e4-78604f2a9935",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        2460,
        2020
      ],
      "credentials": {
        "openAiApi": {
          "id": "y8NvNd30QFsYf7Hw",
          "name": "OpenAI"
        }
      }
    },
    {
      "parameters": {},
      "id": "d99cd923-22f8-4761-8b74-e9bb63452dc2",
      "name": "Calculator",
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        3060,
        2040
      ]
    },
    {
      "parameters": {
        "chunkSize": 300,
        "chunkOverlap": 100,
        "options": {}
      },
      "id": "4b002548-c43f-497c-9aa7-3e085f02c220",
      "name": "Recursive Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        1220,
        2100
      ]
    },
    {
      "parameters": {
        "mode": "load",
        "pineconeIndex": {
          "__rl": true,
          "value": "n8n",
          "mode": "list",
          "cachedResultName": "n8n"
        },
        "prompt": "Belege",
        "topK": 10000,
        "options": {
          "pineconeNamespace": "receipts"
        }
      },
      "id": "d9183ccb-4a3f-4ab9-84c3-60412cbf392c",
      "name": "Pinecone Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        2460,
        1800
      ],
      "credentials": {
        "pineconeApi": {
          "id": "8lDKmR3gvMj1szqg",
          "name": "Pinecone"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "n8n",
          "mode": "list",
          "cachedResultName": "n8n"
        },
        "options": {
          "clearNamespace": false,
          "pineconeNamespace": "receipts"
        }
      },
      "id": "28d07549-c056-4fd2-8cf3-2777de2b6572",
      "name": "Add to Pinecone vector store",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "position": [
        1100,
        1660
      ],
      "typeVersion": 1,
      "alwaysOutputData": false,
      "credentials": {
        "pineconeApi": {
          "id": "8lDKmR3gvMj1szqg",
          "name": "Pinecone"
        }
      }
    },
    {
      "parameters": {},
      "id": "2f595c52-0330-4f01-aa68-0c472ea8acad",
      "name": "Calculator1",
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        1720,
        820
      ]
    },
    {
      "parameters": {
        "name": "receipts",
        "description": "Get all documents",
        "topK": 10000
      },
      "id": "dda77bef-c069-456d-93de-95cc893c371a",
      "name": "Vector Store Tool",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        2020,
        840
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {}
      },
      "id": "0d0686d7-d75f-4af4-a74f-25802121a2c4",
      "name": "Embeddings OpenAI2",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        1740,
        1240
      ],
      "credentials": {
        "openAiApi": {
          "id": "y8NvNd30QFsYf7Hw",
          "name": "OpenAI"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4o-mini",
        "options": {}
      },
      "id": "df08ed65-afc7-4aab-abd6-16180cd300f3",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2140,
        1080
      ],
      "credentials": {
        "openAiApi": {
          "id": "y8NvNd30QFsYf7Hw",
          "name": "OpenAI"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Finde die einzigartige ID des Belegs. Die ID von Rechnungen beginnt mit RE- gefolgt von einer sechsstelligen Zahl. Die ID von Gutschriften beginnt mit GS- gefolgt von einer sechsstelligen Zahl. \n\nDer Gesamtbetrag pro Position des jeweiligen Belegs soll nach Leistungszeitraum abgegrenzt werden, sodass der jeweilige Anteil taggenau der Bilanz eines Geschäftsjahres zugeordnet werden kann.\n\nAnweisungen zur korrekten Aufteilung:\n\nBestimme die Anzahl der Tage im gesamten Leistungszeitraum der Position (von bis oft auch mit - ausgezeichnet). Teile den Gesamtbetrag der Position durch die Anzahl der Tage des Gesamtzeitraums um den Betrag pro Tag zu errechnen. \n\nWenn das Ende des Leistungszeitraums in das Folgejahr fällt, muss der Betrag taggenau bis Jahresende und der Rest auf die Folgejahre aufgeteilt werden. Der Betrag pro Tag ist fest. Für jedes Jahr soll eine eigene Zeile zurückgegeben werden die nur den jeweiligen Anteil enthält der auf ebendieses Jahr fällt.\n\nVermeide doppelte Einträge: Jeder Betrag für ein Jahr soll nur einmal pro ID aufgeführt werden.\nFalls kein Leistungszeitraum angegeben ist, gilt der gesamte Betrag für das Jahr des Belegs.\n\nDie Berechnungen dürfen soviele Nachkommastellen enthalten um Rundungsfehler zu vermeiden und folgende Schritte beinhalten:\n\nBestimme den Nettobetrag für jedes Jahr, indem du den Betrag pro Tag mit der Anzahl der Tage pro Jahr multiplizierst. Der erste und der letzte Tag müssen mitgezählt werden.\nBerechne die enthaltene Umsatzsteuer, indem du den Nettobetrag mit dem Umsatzsteuersatz multiplizierst.\nBestimme den Bruttobetrag, indem du den Nettobetrag und die enthaltene Umsatzsteuer addierst.\nJede Position darf nur einmal pro Jahr aufgeführt sein.\n\nGib mir das Ergebnis kommentarlos in Tabellenform mit folgenden Spalten zurück:\n\nID\nBezeichnung der Position\nGesamtzeitraum\nAnteil Jahr\nZeitraum\nAnzahl Tage\nBetrag pro Tag\nNettobetrag\nBruttobetrag\nEnthaltene Umsatzsteuer\nErklärung und Rechenweg\n\nDer Beleg heißt \"{{ $json.document.metadata.file_name }}\" und hat folgenden Inhalt: \"{{ $json.document.pageContent }}\"",
              "role": "system"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "id": "dff79d7f-161c-474f-86b3-c9f7f7b3c5fd",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.4,
      "position": [
        2880,
        1800
      ],
      "credentials": {
        "openAiApi": {
          "id": "y8NvNd30QFsYf7Hw",
          "name": "OpenAI"
        }
      }
    },
    {
      "parameters": {
        "pineconeIndex": {
          "__rl": true,
          "value": "n8n",
          "mode": "list",
          "cachedResultName": "n8n"
        },
        "options": {
          "pineconeNamespace": "receipts"
        }
      },
      "id": "56a8a510-38c2-4ccb-ad43-e3104ebe55ad",
      "name": "Pinecone Vector Store1",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        1800,
        1060
      ],
      "credentials": {
        "pineconeApi": {
          "id": "8lDKmR3gvMj1szqg",
          "name": "Pinecone"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "Hole alle Belege und finde jeweils die einzigartige ID des Belegs. Die ID von Rechnungen beginnt mit RE- gefolgt von einer sechsstelligen Zahl. Die ID von Gutschriften beginnt mit GS- gefolgt von einer sechsstelligen Zahl. \n\nDer Gesamtbetrag pro Position des jeweiligen Belegs soll nach Leistungszeitraum abgegrenzt werden, sodass der jeweilige Anteil taggenau der Bilanz eines Geschäftsjahres zugeordnet werden kann.\n\nAnweisungen zur korrekten Aufteilung:\n\nBestimme die Anzahl der Tage im gesamten Leistungszeitraum der Position (von bis oft auch mit - ausgezeichnet). Teile den Gesamtbetrag der Position durch die Anzahl der Tage des Gesamtzeitraums um den Betrag pro Tag zu errechnen. \n\nWenn das Ende des Leistungszeitraums in das Folgejahr fällt, muss der Betrag taggenau bis Jahresende und der Rest auf die Folgejahre aufgeteilt werden. Der Betrag pro Tag ist fest. Für jedes Jahr soll eine eigene Zeile zurückgegeben werden die nur den jeweiligen Anteil enthält der auf ebendieses Jahr fällt.\n\nVermeide doppelte Einträge: Jeder Betrag für ein Jahr soll nur einmal pro ID aufgeführt werden.\nFalls kein Leistungszeitraum angegeben ist, gilt der gesamte Betrag für das Jahr des Belegs.\n\nDie Berechnungen dürfen soviele Nachkommastellen enthalten um Rundungsfehler zu vermeiden und folgende Schritte beinhalten:\n\nBestimme den Nettobetrag für jedes Jahr, indem du den Betrag pro Tag mit der Anzahl der Tage pro Jahr multiplizierst. Der erste und der letzte Tag müssen mitgezählt werden.\nBerechne die enthaltene Umsatzsteuer, indem du den Nettobetrag mit dem Umsatzsteuersatz multiplizierst.\nBestimme den Bruttobetrag, indem du den Nettobetrag und die enthaltene Umsatzsteuer addierst.\nJede Position darf nur einmal pro Jahr aufgeführt sein.\n\nGib mir das Ergebnis kommentarlos in Tabellenform mit folgenden Spalten zurück:\n\nID\nBezeichnung der Position\nGesamtzeitraum\nAnteil Jahr\nZeitraum\nAnzahl Tage\nBetrag pro Tag\nNettobetrag\nBruttobetrag\nEnthaltene Umsatzsteuer\nErklärung und Rechenweg",
              "role": "system"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "id": "9bbe0f31-ffaa-459f-bd87-3d4ba4fc1b4d",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.4,
      "position": [
        1720,
        600
      ],
      "credentials": {
        "openAiApi": {
          "id": "y8NvNd30QFsYf7Hw",
          "name": "OpenAI"
        }
      }
    }
  ],
  "connections": {
    "Download file": {
      "main": [
        [
          {
            "node": "Add to Pinecone vector store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Add to Pinecone vector store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Add to Pinecone vector store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "OpenAI",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculator1": {
      "ai_tool": [
        [
          {
            "node": "OpenAI1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Vector Store Tool": {
      "ai_tool": [
        [
          {
            "node": "OpenAI1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI2": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store1": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "d4c71ca8-0193-4d74-95de-900a3ffa6a4d",
  "triggerCount": 0,
  "tags": [
    {
      "createdAt": "2024-07-19T11:40:04.689Z",
      "updatedAt": "2024-07-19T11:40:04.689Z",
      "id": "wNSc3sQpRZI8CPoy",
      "name": "pinecone"
    },
    {
      "createdAt": "2024-07-18T13:44:20.706Z",
      "updatedAt": "2024-07-18T13:44:20.706Z",
      "id": "wtXD0GeIgYeLUCv8",
      "name": "whmcs"
    }
  ]
}