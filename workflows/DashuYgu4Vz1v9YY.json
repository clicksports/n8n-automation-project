{
  "createdAt": "2024-07-25T13:22:57.253Z",
  "updatedAt": "2024-08-05T05:48:23.000Z",
  "id": "DashuYgu4Vz1v9YY",
  "name": "Annual invoice split",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {}
      },
      "id": "5a4b96c2-efc8-464f-acea-6294cf4f2ea5",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        1320,
        1580
      ],
      "typeVersion": 1,
      "credentials": {
        "openAiApi": {
          "id": "y8NvNd30QFsYf7Hw",
          "name": "OpenAI"
        }
      }
    },
    {
      "parameters": {
        "dataType": "binary",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "file_name",
                "value": "={{ $('Add in metadata').item.json.file_name }}"
              }
            ]
          }
        }
      },
      "id": "b66a9700-463e-4ed0-9515-df77cdfe46b1",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        1500,
        1580
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Add a new field called 'myNewField' to the JSON of the item\n$input.item.json.file_name = $input.item.binary.data.fileName;\n$input.item.json.file_ext = $input.item.binary.data.fileExtension;\n\nreturn $input.item;"
      },
      "id": "73f90891-99a1-4e0e-b873-154a0e42880d",
      "name": "Add in metadata",
      "type": "n8n-nodes-base.code",
      "position": [
        1167,
        1360
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "id": "b93635d8-bafc-4843-9617-aa16e7b8e970",
      "name": "Download file",
      "type": "n8n-nodes-base.googleDrive",
      "position": [
        940,
        1360
      ],
      "typeVersion": 3,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "BVkiHtheS61uART6",
          "name": "Google christian.gick@clicksports.de"
        }
      }
    },
    {
      "parameters": {
        "chunkSize": 5000,
        "options": {
          "splitCode": "markdown"
        }
      },
      "id": "b7037dc4-5ea4-49ee-911f-f7df66b0c695",
      "name": "Recursive Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "position": [
        1500,
        1740
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "queryString": "*_??-??????_*.pdf",
        "returnAll": true,
        "filter": {
          "folderId": {
            "__rl": true,
            "value": "1--InOSXqwW1vm0z7D-HLHzAqy57ju2BX",
            "mode": "list",
            "cachedResultName": "n8n",
            "cachedResultUrl": "https://drive.google.com/drive/folders/1--InOSXqwW1vm0z7D-HLHzAqy57ju2BX"
          }
        },
        "options": {}
      },
      "id": "547f5e57-29a1-490a-a5f8-5ada3a9134bb",
      "name": "Google Drive",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        300,
        1260
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "BVkiHtheS61uART6",
          "name": "Google christian.gick@clicksports.de"
        }
      }
    },
    {
      "parameters": {},
      "id": "5acce4a2-0ac4-4f7f-aa42-497d5f5d0574",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -640,
        1960
      ]
    },
    {
      "parameters": {
        "name": "invoices",
        "description": "Alle Dokumente",
        "topK": 1000
      },
      "id": "88770e85-0aa6-452e-a09c-9ab366c93c68",
      "name": "Vector Store Tool",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        340,
        2520
      ]
    },
    {
      "parameters": {
        "model": "gpt-4o-mini",
        "options": {
          "temperature": 0
        }
      },
      "id": "81b948c1-c52e-415b-9af0-55a8857611f0",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        540,
        2740
      ],
      "credentials": {
        "openAiApi": {
          "id": "y8NvNd30QFsYf7Hw",
          "name": "OpenAI"
        }
      }
    },
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {}
      },
      "id": "36f0310b-560c-4e44-8e84-f4e3bceb2bce",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        160,
        2980
      ],
      "credentials": {
        "openAiApi": {
          "id": "y8NvNd30QFsYf7Hw",
          "name": "OpenAI"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1pvMisn__G4QvkcRX2oj7znz4S7WcXzxi6GJNihvr0lw",
          "mode": "list",
          "cachedResultName": "n8n",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1pvMisn__G4QvkcRX2oj7znz4S7WcXzxi6GJNihvr0lw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1619249675,
          "mode": "list",
          "cachedResultName": "invoices",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1pvMisn__G4QvkcRX2oj7znz4S7WcXzxi6GJNihvr0lw/edit#gid=1619249675"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "Rechnungsnummer",
              "displayName": "Rechnungsnummer",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Bezeichnung der Position",
              "displayName": "Bezeichnung der Position",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Jahr",
              "displayName": "Jahr",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Zeitraum",
              "displayName": "Zeitraum",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Anzahl Tage",
              "displayName": "Anzahl Tage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Betrag pro Tag",
              "displayName": "Betrag pro Tag",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Nettobetrag",
              "displayName": "Nettobetrag",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Bruttobetrag",
              "displayName": "Bruttobetrag",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Enthaltene Umsatzsteuer",
              "displayName": "Enthaltene Umsatzsteuer",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "42568233-9bed-4d4b-b865-5d644f61c11d",
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.4,
      "position": [
        1080,
        2240
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "FsAH6WckeSIuyyxJ",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "message.content.Positionen",
        "options": {}
      },
      "id": "16283d5f-329d-4194-a360-ac230be71212",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        820,
        2240
      ]
    },
    {
      "parameters": {},
      "id": "92f6d5b6-c6e7-4072-a23f-8331f50f8ca9",
      "name": "Calculator",
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        780,
        2520
      ]
    },
    {
      "parameters": {
        "pineconeIndex": {
          "__rl": true,
          "value": "n8n",
          "mode": "list",
          "cachedResultName": "n8n"
        },
        "options": {
          "pineconeNamespace": "invoices"
        }
      },
      "id": "3325560d-13ad-46e4-b7f7-47766fd0ad75",
      "name": "Pinecone Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        160,
        2760
      ],
      "credentials": {
        "pineconeApi": {
          "id": "8lDKmR3gvMj1szqg",
          "name": "Pinecone"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "da2f6fdf-7c18-4b8d-b759-5970c778c35b",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        600,
        1260
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "n8n",
          "mode": "list",
          "cachedResultName": "n8n"
        },
        "options": {
          "clearNamespace": true,
          "pineconeNamespace": "invoices"
        }
      },
      "id": "28d07549-c056-4fd2-8cf3-2777de2b6572",
      "name": "Add to Pinecone vector store",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "position": [
        1380,
        1360
      ],
      "typeVersion": 1,
      "credentials": {
        "pineconeApi": {
          "id": "8lDKmR3gvMj1szqg",
          "name": "Pinecone"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Du hast alle Rechnungen mit einer einzigartigen Rechnungsnummer die mit RE- beginnt in der Datenbank. Der Gesamtbetrag pro Rechnungsposition aller Rechnungen soll nach Leistungszeitraum abgegrenzt werden, sodass der jeweilige Anteil der Bilanz eines Geschäftsjahres zugeordnet werden kann.\n\nAnweisungen zur korrekten Aufteilung:\n\nBestimme die Anzahl der Tage im Leistungszeitraum der Position (von bis). Teile den Gesamtbetrag der Position durch die Anzahl der Tage des Gesamtzeitraums um den Betrag pro Tag zu errechnen. \n\nWenn das Ende des Leistungszeitraums über den 31.12.2023 hinausgeht, muss der jährliche Betrag taggenau auf 2023 und den Rest auf alle folgenden Jahre aufgeteilt werden. Der Betrag pro Tag ist für alle Jahre gleich. Für jedes Jahr soll eine eigene Zeile zurückgegeben werden die nur den Zeitraum enthält der auf ebendieses Jahr fällt.\n\nVermeide doppelte Einträge: Jeder Betrag für ein Jahr soll nur einmal pro Rechnungsnummer aufgeführt werden.\nFalls kein Leistungszeitraum angegeben ist, gilt der gesamte Betrag für das Jahr der Rechnung.\n\nDie Berechnungen dürfen soviele Nachkommastellen enthalten um Rundungsfehler zu vermeiden und folgende Schritte beinhalten:\n\nBestimme den Nettobetrag für jedes Jahr, indem du den Betrag pro Tag mit der Anzahl der Tage pro Jahr multiplizierst. Der erste und der letzte Tag müssen mitgezählt werden.\nBerechne die enthaltene Umsatzsteuer, indem du den Nettobetrag mit dem Umsatzsteuersatz multiplizierst.\nBestimme den Bruttobetrag, indem du den Nettobetrag und die enthaltene Umsatzsteuer addierst.\nJede Position darf nur einmal pro Jahr aufgeführt sein.\n\nGib mir die Variable \"Positionen\" mit folgenden Spalten zurück:\n\nRechnungsnummer\nBezeichnung der Position\nJahr\nZeitraum\nAnzahl Tage\nBetrag pro Tag\nNettobetrag\nBruttobetrag\nEnthaltene Umsatzsteuer"
            }
          ]
        },
        "jsonOutput": true,
        "options": {
          "temperature": 0
        }
      },
      "id": "a54b0a76-a90c-4909-b32e-107c2249a236",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.4,
      "position": [
        380,
        2240
      ],
      "credentials": {
        "openAiApi": {
          "id": "y8NvNd30QFsYf7Hw",
          "name": "OpenAI"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 80,
        "width": 2431.9552165833215
      },
      "id": "e913496b-bcee-4459-88e5-fc54432f6b62",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -49.878408832342075,
        1980
      ]
    }
  ],
  "connections": {
    "Download file": {
      "main": [
        [
          {
            "node": "Add in metadata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add in metadata": {
      "main": [
        [
          {
            "node": "Add to Pinecone vector store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Add to Pinecone vector store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Add to Pinecone vector store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vector Store Tool": {
      "ai_tool": [
        [
          {
            "node": "OpenAI",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "OpenAI",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [],
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "becd77fc-1a7e-4ca8-83ab-a32d6bd4939a",
  "triggerCount": 0,
  "tags": [
    {
      "createdAt": "2024-07-19T11:40:04.689Z",
      "updatedAt": "2024-07-19T11:40:04.689Z",
      "id": "wNSc3sQpRZI8CPoy",
      "name": "pinecone"
    },
    {
      "createdAt": "2024-07-18T13:44:20.706Z",
      "updatedAt": "2024-07-18T13:44:20.706Z",
      "id": "wtXD0GeIgYeLUCv8",
      "name": "whmcs"
    }
  ]
}