{
  "createdAt": "2024-07-18T14:16:00.169Z",
  "updatedAt": "2024-09-23T09:51:31.403Z",
  "id": "Lzw399ANe04HZ6wK",
  "name": "Validate processing SSL orders",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://my.gogetssl.com/api/auth",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "user",
              "value": "ssl@clicksports.de"
            },
            {
              "name": "pass",
              "value": "4e11675a327aad6831703c82fdf01bea"
            }
          ]
        },
        "options": {}
      },
      "id": "bd2bfc90-754a-4092-a06e-eac988393958",
      "name": "Authentication",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        -3700,
        700
      ],
      "executeOnce": true
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 15
            }
          ]
        }
      },
      "id": "c5995585-b08c-4862-8e18-d148ee92a61f",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        -3960,
        860
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Funktion zum Laden der Public Suffix List\nasync function loadPublicSuffixList() {\n    const response = await this.helpers.request({\n        method: 'GET',\n        url: 'https://raw.githubusercontent.com/publicsuffix/list/master/public_suffix_list.dat',\n        json: false,\n    });\n    \n    const suffixes = response.split('\\n')\n        .map(line => line.trim())\n        .filter(line => line && !line.startsWith('//') && !line.startsWith('!'));\n\n    return suffixes;\n}\n\n// Funktion zum Extrahieren der Basisdomain\nfunction getBaseDomain(domain, publicSuffixList) {\n    const domainParts = domain.split('.');\n    const domainPartsLength = domainParts.length;\n\n    // Prüfe auf öffentliche Suffixe von der längsten zur kürzesten\n    for (let i = 0; i < publicSuffixList.length; i++) {\n        const suffix = publicSuffixList[i];\n        const suffixParts = suffix.split('.');\n        const suffixPartsLength = suffixParts.length;\n\n        // Wenn das Ende der Domain mit dem öffentlichen Suffix übereinstimmt\n        if (domainParts.slice(-suffixPartsLength).join('.') === suffix) {\n            // Nimm den Teil vor dem öffentlichen Suffix als Basisdomain\n            return domainParts.slice(-(suffixPartsLength + 1)).join('.');\n        }\n    }\n\n    // Standardlogik für zweigliedrige TLDs\n    if (domainPartsLength >= 2) {\n        return domainParts.slice(-2).join('.');\n    } else {\n        return domain;\n    }\n}\n\n// Public Suffix List wird nur einmal geladen und in einer globalen Variable gespeichert\nif (!global.publicSuffixList) {\n    global.publicSuffixList = await loadPublicSuffixList();\n}\n\n// Verarbeitung jedes Items einzeln\nconst domain = item.json.domain; // Ersetze dies durch den tatsächlichen Pfad zu deiner Domain\nconst baseDomain = getBaseDomain(domain, global.publicSuffixList);\n\nreturn {\n    json: { ...item.json, baseDomain },\n};\n"
      },
      "id": "885a30e8-5458-46aa-9707-aa0d2796f60e",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2240,
        840
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://my.gogetssl.com/api/orders/ssl/change_validation_method/{{ $('Order data').item.json.order_id }}/",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "domain",
              "value": "={{ $('Order data').item.json.domain }}"
            },
            {
              "name": "new_method",
              "value": "dns"
            }
          ]
        },
        "options": {}
      },
      "id": "e36a1476-cec4-47db-86d1-d448cc7033d7",
      "name": "Change validation method to dns",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        3220,
        1160
      ],
      "credentials": {
        "httpQueryAuth": {
          "id": "pskjhKSslGfoyCfJ",
          "name": "GoGetSSL"
        }
      }
    },
    {
      "parameters": {},
      "id": "7027584c-9581-4f8b-b229-93213fe59be2",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -3940,
        540
      ],
      "disabled": true
    },
    {
      "parameters": {
        "fieldToSplitOut": "plesk_domainpool",
        "include": "allOtherFields",
        "options": {
          "destinationFieldName": "hostname"
        }
      },
      "id": "5fa2300c-d015-4c4d-9911-128140fd3af6",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -640,
        1260
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f53176f2-5673-4715-bcfb-c76508895782",
              "name": "plesk_domainpool",
              "value": "=[\"www.{{ $json.domain }}\", \"{{ $json.domain }}\", \"{{ $json.baseDomain }}\", \"plesk.{{ $json.domain }}\", \"plesk.{{ $json.baseDomain }}\"]",
              "type": "array"
            },
            {
              "id": "4a56981d-6e0b-46f9-8085-a281d72b09d1",
              "name": "domain_name",
              "value": "={{ $json.domain }}",
              "type": "string"
            },
            {
              "id": "29d958cf-fade-4465-aa99-8f86c871d935",
              "name": "approver_method",
              "value": "={{ $json.approver_method }}",
              "type": "object"
            },
            {
              "id": "9a43d22d-28ca-4e18-9bda-200a6f37e696",
              "name": "order_id",
              "value": "={{ $json.order_id }}",
              "type": "number"
            }
          ]
        },
        "options": {
          "ignoreConversionErrors": false
        }
      },
      "id": "e37c6e06-0210-4cda-b334-41ad2a9a985c",
      "name": "Domain",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -2020,
        840
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3f5a7a3f-0eea-4b88-8fb1-147cb7b4f2a7",
              "name": "hostname",
              "value": "={{ $('Host').item.json.hostname }}",
              "type": "string"
            },
            {
              "id": "5de1eb4f-773b-46bb-9d6f-3412fabfcfd6",
              "name": "rootfolder",
              "value": "={{ $json.stdout }}",
              "type": "string"
            },
            {
              "id": "f0017b93-d9ff-4326-82f6-6079872ef9e5",
              "name": "validationfolder",
              "value": "={{ $json.stdout }}/.well-known/pki-validation",
              "type": "string"
            },
            {
              "id": "5ad4897d-86b3-4d01-abef-21a8ecae2f61",
              "name": "order_id",
              "value": "={{ $('Domain').item.json.order_id }}",
              "type": "number"
            },
            {
              "id": "7fc223fd-1a94-468d-9468-ee1531b7edaf",
              "name": "domain",
              "value": "={{ $('Domain').item.json.domain_name }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2185ff0a-c762-49ff-948a-17834217babe",
      "name": "Folders",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        660,
        1220
      ]
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "resource": "file",
        "path": "={{ $('Validation').item.json.validationfolder }}",
        "options": {}
      },
      "id": "8bd9a87b-3c57-47eb-a8ae-3840d42edfd2",
      "name": "SSH",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        1520,
        920
      ],
      "credentials": {
        "sshPrivateKey": {
          "id": "7cM8UD60RNSc7v3k",
          "name": "SSH Hcloud"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://my.gogetssl.com/api/orders/ssl/revalidate/{{ $('Validation').item.json.order_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "domain",
              "value": "={{ $('Validation').item.json.domain }}"
            }
          ]
        },
        "options": {}
      },
      "id": "55d65cd6-4aa2-4c14-8d88-d34b9be90506",
      "name": "Try validate https",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        2000,
        920
      ],
      "credentials": {
        "httpQueryAuth": {
          "id": "pskjhKSslGfoyCfJ",
          "name": "GoGetSSL"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://my.gogetssl.com/api/orders",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "status",
              "value": "processing"
            }
          ]
        },
        "options": {}
      },
      "id": "87336115-4f84-4275-ae5f-a7f8355d2738",
      "name": "Get processing orders",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        -3440,
        860
      ],
      "credentials": {
        "httpQueryAuth": {
          "id": "pskjhKSslGfoyCfJ",
          "name": "GoGetSSL"
        }
      }
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "=plesk bin dns --add {{ $('Domain').item.json.domain_name.replace(/^www\\./, '') }} -cname $(echo {{ $('DNS Validation').item.json.approver_method.dns.record.split(' ')[0] }} | sed 's/\\.{{ $('DNS Validation').item.json.domain.replace(/^www\\./, '')}}//') -canonical {{ $('DNS Validation').item.json.approver_method.dns.record.split(' ')[2] }}",
        "cwd": "=/"
      },
      "id": "396b2c64-b437-4b23-924d-327fa0b0e731",
      "name": "Add new DNS record",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        5220,
        1340
      ],
      "alwaysOutputData": true,
      "credentials": {
        "sshPrivateKey": {
          "id": "7cM8UD60RNSc7v3k",
          "name": "SSH Hcloud"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "amount": 10
      },
      "id": "eb902209-58a3-4556-9feb-90caca414f83",
      "name": "Wait2",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2260,
        920
      ],
      "webhookId": "d5f33be3-f06c-430f-a548-deb0fac283ad"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e250fa17-495a-46de-91ca-5f3fc8b8f836",
              "name": "hostname",
              "value": "={{ $('Folders1').item.json.hostname }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f62b5114-59d0-4658-a0aa-5afef402ae24",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3780,
        1160
      ]
    },
    {
      "parameters": {
        "url": "=https://my.gogetssl.com/api/orders/status/{{ $('Domain').item.json.order_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "options": {}
      },
      "id": "d0a5bbd1-7b97-4964-9687-a290d6c69a57",
      "name": "Validation status",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        2500,
        920
      ],
      "credentials": {
        "httpQueryAuth": {
          "id": "pskjhKSslGfoyCfJ",
          "name": "GoGetSSL"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://my.gogetssl.com/api/orders/status/{{ $('Order data').item.json.order_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "options": {}
      },
      "id": "7ea42742-d241-430e-a96a-dbf0c4741b56",
      "name": "DNS Validation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        3500,
        1160
      ],
      "credentials": {
        "httpQueryAuth": {
          "id": "pskjhKSslGfoyCfJ",
          "name": "GoGetSSL"
        }
      }
    },
    {
      "parameters": {
        "amount": 1,
        "unit": "minutes"
      },
      "id": "b341d4b4-f345-4943-881f-e6e8729a8715",
      "name": "Wait3",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        5480,
        1340
      ],
      "webhookId": "ac0669d7-afcc-4773-9654-2f86c503564f"
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "=plesk bin dns --info {{ $('Order data').item.json.domain.replace(/^www\\./, '') }} | grep 'sectigo'",
        "cwd": "=/"
      },
      "id": "f3e85cc1-fe1f-4087-8fbc-2b7208cab767",
      "name": "Find old DNS records",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        4040,
        940
      ],
      "alwaysOutputData": true,
      "credentials": {
        "sshPrivateKey": {
          "id": "7cM8UD60RNSc7v3k",
          "name": "SSH Hcloud"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "= plesk bin dns --del {{ $('Order data').item.json.domain.replace(/^www\\./, '') }} -cname {{ $json.cname.trim() }} -canonical {{ $json.canonical.trim() }}"
      },
      "id": "153ca7ed-1174-4d76-a521-06090fd03dce",
      "name": "Delete",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        4720,
        1140
      ],
      "credentials": {
        "sshPrivateKey": {
          "id": "7cM8UD60RNSc7v3k",
          "name": "SSH Hcloud"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://my.gogetssl.com/api/orders/ssl/revalidate/{{ $('Domain').item.json.order_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "domain",
              "value": "={{ $('Domain').item.json.domain_name }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3362f745-bef3-499c-96a7-4a5bb07a5a1b",
      "name": "Validate DNS",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        5720,
        1340
      ],
      "credentials": {
        "httpQueryAuth": {
          "id": "pskjhKSslGfoyCfJ",
          "name": "GoGetSSL"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "orders",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "98953c2f-8b45-466b-93e2-ff71bba84add",
      "name": "Orders",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 3,
      "position": [
        -3200,
        860
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://my.gogetssl.com/api/orders/ssl/change_validation_method/{{ $json.orders.order_id }}/",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "domain",
              "value": "={{ $json.orders.common_name }}"
            },
            {
              "name": "new_method",
              "value": "https"
            }
          ]
        },
        "options": {}
      },
      "id": "adc9f078-cd8d-4191-8e56-890ec145f932",
      "name": "Change validation method to https",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        -2700,
        840
      ],
      "alwaysOutputData": true,
      "credentials": {
        "httpQueryAuth": {
          "id": "pskjhKSslGfoyCfJ",
          "name": "GoGetSSL"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3f1760d-b2bb-49cd-b180-b97e34281ad5",
              "leftValue": "={{ $json.orders.common_name }}",
              "rightValue": "=www.gutmann-factory.de",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9f9b4d38-0d46-439b-83d4-89f3697e370e",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2980,
        860
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ea4f71b7-2f4a-4464-8b8b-99a0cc3d1451",
              "name": "hostname",
              "value": "={{ $json.hostname }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "67c0f670-6896-4796-8d34-362819300bfa",
      "name": "Host",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -140,
        1460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "a944e985-f927-4e44-b4fa-8631e5064580",
              "leftValue": "={{ $json.stdout }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "2ee8c59e-7ec6-490a-be39-a08c8d76c64a",
      "name": "If2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        380,
        1240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "c333694a-917b-45c7-bd3a-c9e5d0d1962a",
              "leftValue": "={{ $json.status_description }}",
              "rightValue": "validation",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": true,
          "looseTypeValidation": true
        }
      },
      "id": "45da48b1-89d0-460f-8e47-b5ba23e0afea",
      "name": "If4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2700,
        920
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "4bd5ba40-744a-4093-8872-061d9f3ac990",
      "name": "Loop Over Items1",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -420,
        1260
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "75b0df5e-45fe-4708-b470-6fc606878e24",
              "name": "cname",
              "value": "=  {{ $json.stdout.split(\" \")[0].split(\".\")[0] }}",
              "type": "string"
            },
            {
              "id": "3b281aba-00fd-4eec-b8e7-d7a359d17bbc",
              "name": "canonical",
              "value": "={{ $json.stdout.split(\" \")[3] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "b02ea79c-43de-4e77-9de4-33e95ee9eda2",
      "name": "Edit Fields2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4260,
        940
      ]
    },
    {
      "parameters": {
        "url": "=https://my.gogetssl.com/api/orders/status/{{ $('Orders').item.json.orders.order_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "options": {}
      },
      "id": "660abb61-8a56-40a8-95b4-52fd4a217fad",
      "name": "Order data",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        -2480,
        840
      ],
      "credentials": {
        "httpQueryAuth": {
          "id": "pskjhKSslGfoyCfJ",
          "name": "GoGetSSL"
        }
      }
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "=plesk bin domain -i {{ $('Loop Over Items1').item.json.plesk_domain_root.replace(/^www\\./, '') }} | sed -n 's/.*--WWW-Root--: //p'",
        "cwd": "=/"
      },
      "id": "3a260382-427d-426b-99d3-5881923bf11c",
      "name": "Get domain folder",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        80,
        1460
      ],
      "alwaysOutputData": true,
      "credentials": {
        "sshPrivateKey": {
          "id": "7cM8UD60RNSc7v3k",
          "name": "SSH Hcloud"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "id": "156f72a0-e964-43a4-842f-fc6fb0edae8a",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        4480,
        1140
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "id": "c712bc22-c535-4475-83c3-c63e9387cb0c",
      "name": "Merge3",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        4940,
        1340
      ]
    },
    {
      "parameters": {
        "operation": "toText",
        "sourceProperty": "approver_method.https.content",
        "options": {
          "fileName": "={{ $json.approver_method.https.filename }}"
        }
      },
      "id": "e404e7fe-b93e-4416-9b77-55755de7c449",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2240,
        460
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "amount": 10
      },
      "id": "c5cfc73f-9e19-4fc7-bd7d-da771b4c7e62",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1760,
        920
      ],
      "webhookId": "d5f33be3-f06c-430f-a548-deb0fac283ad"
    },
    {
      "parameters": {
        "unit": "minutes"
      },
      "id": "6fc0c3c2-882c-4bd5-9dc0-4941064a7551",
      "name": "Wait4",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2960,
        1160
      ],
      "webhookId": "d5f33be3-f06c-430f-a548-deb0fac283ad"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "273c8e68-e764-4b01-8b3f-e2761baab19c",
              "name": "domain_name_redirect",
              "value": "={{$json.headers.link.match(/https?:\\/\\/([^/]+)/)[1] || ''}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "554f2cc9-4349-4986-a95e-3277b3abac72",
      "name": "Extract redirect domain",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1640,
        1280
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "id": "f09c3d1f-249f-472e-9cf6-ebae67b03aa6",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -1360,
        1260
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "2cb9f96b-1867-4690-b6e4-dc225b75dbd0",
              "leftValue": "={{ $json['domain_name_redirect'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "cba5cace-c3d5-4782-8997-d95d31dee951",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        -1140,
        1260
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "id": "7937ab14-a456-4f60-ad9e-2dc2af3b56b2",
      "name": "Validation",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1260,
        920
      ]
    },
    {
      "parameters": {},
      "id": "434b24de-4f20-4001-890a-0c2da65ac937",
      "name": "Limit",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        940,
        1220
      ]
    },
    {
      "parameters": {
        "url": "=https://{{ $('Domain').item.json.domain_name }}",
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "9e74bbc4-2119-4f11-87d8-1ff9a98f9e61",
      "name": "Check for redirect",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1860,
        1280
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2818c393-4af0-4a99-ab2b-e956ccc41f99",
              "name": "plesk_domain_root",
              "value": "={{ $json.domain_name_redirect }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "b2cdbf33-6087-4e58-9098-db2bffb9b788",
      "name": "Original domain",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -880,
        1120
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2818c393-4af0-4a99-ab2b-e956ccc41f99",
              "name": "plesk_domain_root",
              "value": "={{ $json.domain_name }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "f097de7e-9b80-4979-8c7f-7e24979afd71",
      "name": "Redirect domain",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -880,
        1360
      ]
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "ChZSuDnXj7ofvvuC",
          "mode": "list",
          "cachedResultName": "Deploy SSL certificate to Plesk"
        },
        "mode": "each",
        "options": {}
      },
      "id": "908a71f0-efe4-48fe-b9f0-da0d449927b6",
      "name": "Deploy cert",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.1,
      "position": [
        6420,
        620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "c333694a-917b-45c7-bd3a-c9e5d0d1962a",
              "leftValue": "={{ $json.status_description }}",
              "rightValue": "validation",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": true,
          "looseTypeValidation": true
        }
      },
      "id": "94dfd29b-ba7a-4347-af86-b8ab06f43304",
      "name": "If5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5960,
        1340
      ]
    }
  ],
  "connections": {
    "Authentication": {
      "main": [
        [
          {
            "node": "Get processing orders",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Domain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Authentication",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Domain": {
      "main": [
        [
          {
            "node": "Validation",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check for redirect",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Folders": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SSH": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Try validate https": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Change validation method to dns": {
      "main": [
        [
          {
            "node": "DNS Validation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get processing orders": {
      "main": [
        [
          {
            "node": "Orders",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Validation status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Find old DNS records",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          },
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Validation status": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DNS Validation": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add new DNS record": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Validate DNS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find old DNS records": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Orders": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Change validation method to https",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Host": {
      "main": [
        [
          {
            "node": "Get domain folder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Folders",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Deploy cert",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Change validation method to https": {
      "main": [
        [
          {
            "node": "Order data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "Host",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Order data": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          },
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get domain folder": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          },
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Delete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "Add new DNS record",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Validation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Try validate https",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Authentication",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait4": {
      "main": [
        [
          {
            "node": "Change validation method to dns",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract redirect domain": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Original domain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redirect domain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validation": {
      "main": [
        [
          {
            "node": "SSH",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Validation",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check for redirect": {
      "main": [
        [
          {
            "node": "Extract redirect domain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Original domain": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redirect domain": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate DNS": {
      "main": [
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [
          {
            "node": "Deploy cert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "oXwbRnZHgYHUkKj4",
    "timezone": "Europe/Berlin"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrencyRules": [],
      "recurrenceRules": []
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "b8585b67-a03c-4a0a-bc13-594a01378cf3",
  "triggerCount": 1,
  "tags": [
    {
      "createdAt": "2024-07-18T13:44:20.701Z",
      "updatedAt": "2024-07-18T13:44:20.701Z",
      "id": "eg0pjrYy9dLUUASF",
      "name": "ssl"
    }
  ]
}