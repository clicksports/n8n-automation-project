{
  "createdAt": "2024-07-18T14:16:00.169Z",
  "updatedAt": "2024-08-03T12:57:00.000Z",
  "id": "Lzw399ANe04HZ6wK",
  "name": "Validate processing SSL orders",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://my.gogetssl.com/api/auth",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "user",
              "value": "ssl@clicksports.de"
            },
            {
              "name": "pass",
              "value": "4e11675a327aad6831703c82fdf01bea"
            }
          ]
        },
        "options": {}
      },
      "id": "bd2bfc90-754a-4092-a06e-eac988393958",
      "name": "Authentication",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        -3400,
        580
      ],
      "executeOnce": true
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes"
            }
          ]
        }
      },
      "id": "c5995585-b08c-4862-8e18-d148ee92a61f",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        -3620,
        580
      ],
      "disabled": true
    },
    {
      "parameters": {
        "url": "=https://my.gogetssl.com/api/orders/status/{{ $json.orders.order_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "options": {}
      },
      "id": "660abb61-8a56-40a8-95b4-52fd4a217fad",
      "name": "validation data",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        -1620,
        580
      ],
      "credentials": {
        "httpQueryAuth": {
          "id": "pskjhKSslGfoyCfJ",
          "name": "GoGetSSL"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Funktion zum Laden der Public Suffix List\nasync function loadPublicSuffixList() {\n    const response = await this.helpers.request({\n        method: 'GET',\n        url: 'https://raw.githubusercontent.com/publicsuffix/list/master/public_suffix_list.dat',\n        json: false,\n    });\n    \n    const suffixes = response.split('\\n')\n        .map(line => line.trim())\n        .filter(line => line && !line.startsWith('//') && !line.startsWith('!'));\n\n    return suffixes;\n}\n\n// Funktion zum Extrahieren der Basisdomain\nfunction getBaseDomain(domain, publicSuffixList) {\n    const domainParts = domain.split('.');\n    const domainPartsLength = domainParts.length;\n\n    // Prüfe auf öffentliche Suffixe von der längsten zur kürzesten\n    for (let i = 0; i < publicSuffixList.length; i++) {\n        const suffix = publicSuffixList[i];\n        const suffixParts = suffix.split('.');\n        const suffixPartsLength = suffixParts.length;\n\n        // Wenn das Ende der Domain mit dem öffentlichen Suffix übereinstimmt\n        if (domainParts.slice(-suffixPartsLength).join('.') === suffix) {\n            // Nimm den Teil vor dem öffentlichen Suffix als Basisdomain\n            return domainParts.slice(-(suffixPartsLength + 1)).join('.');\n        }\n    }\n\n    // Standardlogik für zweigliedrige TLDs\n    if (domainPartsLength >= 2) {\n        return domainParts.slice(-2).join('.');\n    } else {\n        return domain;\n    }\n}\n\n// Public Suffix List wird nur einmal geladen und in einer globalen Variable gespeichert\nif (!global.publicSuffixList) {\n    global.publicSuffixList = await loadPublicSuffixList();\n}\n\n// Verarbeitung jedes Items einzeln\nconst domain = item.json.domain; // Ersetze dies durch den tatsächlichen Pfad zu deiner Domain\nconst baseDomain = getBaseDomain(domain, global.publicSuffixList);\n\nreturn {\n    json: { ...item.json, baseDomain },\n};\n"
      },
      "id": "885a30e8-5458-46aa-9707-aa0d2796f60e",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1340,
        580
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://my.gogetssl.com/api/orders/ssl/change_validation_method/{{ $('Validation').item.json.order_id }}/",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "domain",
              "value": "={{ $('Validation').item.json.domain }}"
            },
            {
              "name": "new_method",
              "value": "dns"
            }
          ]
        },
        "options": {}
      },
      "id": "e36a1476-cec4-47db-86d1-d448cc7033d7",
      "name": "Change validation method to dns",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        3820,
        940
      ],
      "credentials": {
        "httpQueryAuth": {
          "id": "pskjhKSslGfoyCfJ",
          "name": "GoGetSSL"
        }
      }
    },
    {
      "parameters": {},
      "id": "7027584c-9581-4f8b-b229-93213fe59be2",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -3580,
        340
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://my.gogetssl.com/api/orders/ssl/change_validation_method/{{ $json.orders.order_id }}/",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "domain",
              "value": "={{ $json.orders.common_name }}"
            },
            {
              "name": "new_method",
              "value": "https"
            }
          ]
        },
        "options": {}
      },
      "id": "adc9f078-cd8d-4191-8e56-890ec145f932",
      "name": "Change validation method to https",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        -2560,
        220
      ],
      "credentials": {
        "httpQueryAuth": {
          "id": "pskjhKSslGfoyCfJ",
          "name": "GoGetSSL"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "id": "ab82e89d-49d6-433e-8c73-57c3a811c578",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -1980,
        280
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "29ef8d5b-0ed3-45d9-8e18-4337bdca6bab",
              "leftValue": "={{ $json.orders.order_id }}",
              "rightValue": "3071232",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "77ec4bbb-7a84-46df-a7a3-64c2f9968ec0",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2560,
        20
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 597.5429975429976,
        "width": 1077.110565110565
      },
      "id": "95022edc-5e89-4870-9fc5-252b96f2eac8",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2880,
        -140
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "plesk_domainpool",
        "include": "allOtherFields",
        "options": {
          "destinationFieldName": "hostname"
        }
      },
      "id": "5fa2300c-d015-4c4d-9911-128140fd3af6",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -840,
        900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "75f7657b-7717-4c36-90fa-30a42100978c",
              "leftValue": "={{ $json.code }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a977b91b-2080-43c7-a1b7-be76c4ac4197",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        380,
        800
      ]
    },
    {
      "parameters": {
        "errorMessage": "={{ $json.stderr }}"
      },
      "id": "b7e96a29-adc3-4041-a042-7477dd1b6dce",
      "name": "Could not search for vhost",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        740,
        980
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f53176f2-5673-4715-bcfb-c76508895782",
              "name": "plesk_domainpool",
              "value": "=[\"{{ $json.domain }}\", \"{{ $json.baseDomain }}\", \"plesk.{{ $json.domain }}\", \"plesk.{{ $json.baseDomain }}\", \"org-www.clicksports.de\"]",
              "type": "array"
            },
            {
              "id": "4a56981d-6e0b-46f9-8085-a281d72b09d1",
              "name": "domain_name",
              "value": "={{ $json.domain }}",
              "type": "string"
            },
            {
              "id": "29d958cf-fade-4465-aa99-8f86c871d935",
              "name": "approver_method",
              "value": "={{ $json.approver_method }}",
              "type": "object"
            },
            {
              "id": "9a43d22d-28ca-4e18-9bda-200a6f37e696",
              "name": "order_id",
              "value": "={{ $json.order_id }}",
              "type": "number"
            }
          ]
        },
        "options": {
          "ignoreConversionErrors": false
        }
      },
      "id": "e37c6e06-0210-4cda-b334-41ad2a9a985c",
      "name": "Domain",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -1140,
        900
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3f5a7a3f-0eea-4b88-8fb1-147cb7b4f2a7",
              "name": "hostname",
              "value": "={{ $('Host').item.json.hostname }}",
              "type": "string"
            },
            {
              "id": "5de1eb4f-773b-46bb-9d6f-3412fabfcfd6",
              "name": "rootfolder",
              "value": "={{ $json.stdout }}",
              "type": "string"
            },
            {
              "id": "f0017b93-d9ff-4326-82f6-6079872ef9e5",
              "name": "validationfolder",
              "value": "={{ $json.stdout }}/.well-known/pki-validation",
              "type": "string"
            },
            {
              "id": "5ad4897d-86b3-4d01-abef-21a8ecae2f61",
              "name": "order_id",
              "value": "={{ $('Domain').item.json.order_id }}",
              "type": "number"
            },
            {
              "id": "7fc223fd-1a94-468d-9468-ee1531b7edaf",
              "name": "domain",
              "value": "={{ $('Domain').item.json.domain_name }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2185ff0a-c762-49ff-948a-17834217babe",
      "name": "Folders",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        740,
        780
      ]
    },
    {
      "parameters": {
        "amount": "=5"
      },
      "id": "6c2905e7-3691-4924-bfb4-85936b90377f",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1860,
        680
      ],
      "webhookId": "a3a34f6c-9895-45fb-8472-73a6f36ada52"
    },
    {
      "parameters": {
        "operation": "toText",
        "sourceProperty": "approver_method.https.content",
        "options": {
          "fileName": "={{ $json.approver_method.https.filename }}"
        }
      },
      "id": "474c7f1e-1de1-4606-81c1-608f529697c6",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -840,
        660
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ea4f71b7-2f4a-4464-8b8b-99a0cc3d1451",
              "name": "hostname",
              "value": "={{ $json.hostname }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "67c0f670-6896-4796-8d34-362819300bfa",
      "name": "Host",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -560,
        900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "a944e985-f927-4e44-b4fa-8631e5064580",
              "leftValue": "={{ $json.code }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "2ee8c59e-7ec6-490a-be39-a08c8d76c64a",
      "name": "If2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        40,
        900
      ]
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "=plesk bin domain -i {{ $('Domain').item.json.domain_name.replace(/^www\\./, '') }} | sed -n 's/.*--WWW-Root--: //p'",
        "cwd": "=/"
      },
      "id": "3a260382-427d-426b-99d3-5881923bf11c",
      "name": "Get domain root",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        -260,
        900
      ],
      "alwaysOutputData": true,
      "credentials": {
        "sshPrivateKey": {
          "id": "7cM8UD60RNSc7v3k",
          "name": "SSH Hcloud"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "resource": "file",
        "path": "={{ $('Validation').item.json.validationfolder }}",
        "options": {}
      },
      "id": "8bd9a87b-3c57-47eb-a8ae-3840d42edfd2",
      "name": "SSH",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        1600,
        680
      ],
      "credentials": {
        "sshPrivateKey": {
          "id": "7cM8UD60RNSc7v3k",
          "name": "SSH Hcloud"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "compare": "selectedFields",
        "fieldsToCompare": "validationfolder",
        "options": {}
      },
      "id": "43226c53-2256-4b81-a45f-f088c06bfcbd",
      "name": "Remove Duplicates",
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 1.1,
      "position": [
        1040,
        780
      ]
    },
    {
      "parameters": {
        "amount": 300
      },
      "id": "e3ba8dd8-6111-472e-ba25-b2c47fc53820",
      "name": "Wait1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2600,
        480
      ],
      "webhookId": "b0271979-7ac3-4b4e-9c6c-98d8b875fe11"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://my.gogetssl.com/api/orders/ssl/revalidate/{{ $('Validation').item.json.order_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "domain",
              "value": "={{ $('Validation').item.json.domain }}"
            }
          ]
        },
        "options": {}
      },
      "id": "55d65cd6-4aa2-4c14-8d88-d34b9be90506",
      "name": "Try validate https",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        2100,
        680
      ],
      "credentials": {
        "httpQueryAuth": {
          "id": "pskjhKSslGfoyCfJ",
          "name": "GoGetSSL"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://my.gogetssl.com/api/orders/ssl/revalidate/{{ $('Validation').item.json.order_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "domain",
              "value": "={{ $('Validation').item.json.domain }}"
            }
          ]
        },
        "options": {}
      },
      "id": "877d53a7-4b62-4f67-ab94-53b32a7d4ece",
      "name": "Try revalidate https",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        2840,
        700
      ],
      "credentials": {
        "httpQueryAuth": {
          "id": "pskjhKSslGfoyCfJ",
          "name": "GoGetSSL"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "c333694a-917b-45c7-bd3a-c9e5d0d1962a",
              "leftValue": "={{ $json.status_description }}",
              "rightValue": "validation",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": true,
          "looseTypeValidation": true
        }
      },
      "id": "45da48b1-89d0-460f-8e47-b5ba23e0afea",
      "name": "If4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3540,
        700
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "orders",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "98953c2f-8b45-466b-93e2-ff71bba84add",
      "name": "Orders",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 3,
      "position": [
        -2880,
        580
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://my.gogetssl.com/api/orders",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "status",
              "value": "processing"
            }
          ]
        },
        "options": {}
      },
      "id": "87336115-4f84-4275-ae5f-a7f8355d2738",
      "name": "Get processing orders",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        -3160,
        580
      ],
      "credentials": {
        "httpQueryAuth": {
          "id": "pskjhKSslGfoyCfJ",
          "name": "GoGetSSL"
        }
      }
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "=plesk bin dns --del {{ $('Validation').item.json.domain.replace(/^www\\./, '') }} -cname $(plesk bin dns --info {{ $('Validation').item.json.domain.replace(/^www\\./, '') }} | grep 'sectigo' | awk '{print $1}' | sed 's/\\.{{ $('Validation').item.json.domain.replace(/^www\\./, '') }}//') -canonical $(plesk bin dns --info {{ $('Validation').item.json.domain.replace(/^www\\./, '') }} | grep 'sectigo' | awk '{print $5}')\n",
        "cwd": "=/"
      },
      "id": "f3e85cc1-fe1f-4087-8fbc-2b7208cab767",
      "name": "Remove old DNS records",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        4380,
        820
      ],
      "alwaysOutputData": true,
      "credentials": {
        "sshPrivateKey": {
          "id": "7cM8UD60RNSc7v3k",
          "name": "SSH Hcloud"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "=plesk bin dns --add {{ $('Validation').item.json.domain.replace(/^www\\./, '') }} ",
        "cwd": "=/"
      },
      "id": "396b2c64-b437-4b23-924d-327fa0b0e731",
      "name": "Add new DNS record",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        4380,
        1060
      ],
      "alwaysOutputData": true,
      "credentials": {
        "sshPrivateKey": {
          "id": "7cM8UD60RNSc7v3k",
          "name": "SSH Hcloud"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "id": "eb902209-58a3-4556-9feb-90caca414f83",
      "name": "Wait2",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3080,
        700
      ],
      "webhookId": "d5f33be3-f06c-430f-a548-deb0fac283ad"
    },
    {
      "parameters": {
        "url": "=https://my.gogetssl.com/api/orders/status/{{ $('Validation').item.json.order_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "options": {}
      },
      "id": "d0a5bbd1-7b97-4964-9687-a290d6c69a57",
      "name": "Check validation status",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        3320,
        700
      ],
      "credentials": {
        "httpQueryAuth": {
          "id": "pskjhKSslGfoyCfJ",
          "name": "GoGetSSL"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.description }}",
                    "rightValue": "locked",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "locked"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "37e7dcd5-160d-4ad2-a97f-81a28929714c",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        2360,
        680
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "id": "7937ab14-a456-4f60-ad9e-2dc2af3b56b2",
      "name": "Validation",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1320,
        680
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e250fa17-495a-46de-91ca-5f3fc8b8f836",
              "name": "hostname",
              "value": "={{ $('Validation').item.json.hostname }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f62b5114-59d0-4658-a0aa-5afef402ae24",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4080,
        940
      ]
    }
  ],
  "connections": {
    "Authentication": {
      "main": [
        [
          {
            "node": "Get processing orders",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Authentication",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "validation data": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Domain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Authentication",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Change validation method to https": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "validation data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Host",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Folders",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Could not search for vhost",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Domain": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          },
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Folders": {
      "main": [
        [
          {
            "node": "Remove Duplicates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Try validate https",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Validation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Host": {
      "main": [
        [
          {
            "node": "Get domain root",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get domain root": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SSH": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates": {
      "main": [
        [
          {
            "node": "Validation",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Try validate https": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Try revalidate https",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Try revalidate https": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [],
        [
          {
            "node": "Change validation method to dns",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Change validation method to dns": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Orders": {
      "main": [
        [
          {
            "node": "Change validation method to https",
            "type": "main",
            "index": 0
          },
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get processing orders": {
      "main": [
        [
          {
            "node": "Orders",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove old DNS records": {
      "main": [
        []
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Check validation status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check validation status": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Try revalidate https",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validation": {
      "main": [
        [
          {
            "node": "SSH",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Remove old DNS records",
            "type": "main",
            "index": 0
          },
          {
            "node": "Add new DNS record",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "oXwbRnZHgYHUkKj4",
    "timezone": "Europe/Berlin"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrencyRules": []
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "93d25ab7-9d79-40c1-ba7e-551f8906ce66",
  "triggerCount": 1,
  "tags": [
    {
      "createdAt": "2024-07-18T13:44:20.701Z",
      "updatedAt": "2024-07-18T13:44:20.701Z",
      "id": "eg0pjrYy9dLUUASF",
      "name": "ssl"
    }
  ]
}