{
  "name": "Index issues",
  "nodes": [
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {
          "stripNewLines": true
        },
        "requestOptions": {}
      },
      "id": "9440efad-a330-436d-9fba-8b7f8ad77bd8",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        4700,
        940
      ],
      "credentials": {
        "openAiApi": {
          "id": "yiuOd1rh4VvrteZZ",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "chunkSize": 2500,
        "chunkOverlap": 200,
        "options": {},
        "requestOptions": {}
      },
      "id": "bb39a542-bb21-4ad7-869d-56fd05e0752b",
      "name": "Recursive Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        4980,
        1160
      ]
    },
    {
      "parameters": {
        "content": "https://app.pinecone.io/organizations/-O0Pw_QbHmH05dWsaUEX/projects/de8f03c0-3faa-4e6e-a30c-2e834f4dd315/indexes/n8n/browser",
        "height": 123.61254232328483,
        "width": 348.09302325665226
      },
      "id": "69bd1be9-d3ed-4686-bd06-5577303a63a1",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4360,
        420
      ]
    },
    {
      "parameters": {
        "content": "https://clicksports.atlassian.net/issues/?filter=29253",
        "height": 80,
        "width": 282.9877088253423
      },
      "id": "1753e627-13d6-4fe1-9c37-ea55c4f5acd4",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        740,
        780
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "issueKey": "={{ $json.key }}",
        "updateFields": {
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "fieldId": {
                  "__rl": true,
                  "value": "customfield_14799",
                  "mode": "id"
                },
                "fieldValue": "={{ DateTime.now() }}"
              }
            ]
          }
        }
      },
      "id": "7623f32a-31d6-4b72-b544-267f4877f083",
      "name": "Set index timestamp",
      "type": "n8n-nodes-base.jira",
      "typeVersion": 1,
      "position": [
        6240,
        200
      ],
      "credentials": {
        "jiraSoftwareCloudApi": {
          "id": "EdAKPJ9r1366gZwb",
          "name": "Jira christian.gick@clicksports.de"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Du bist ein hilfsbereiter Bot und kannst auf einen Index zugreifen in dem alle offenen und kürzlich geschlossenen Jira Vorgänge unserer Digitalagentur gespeichert sind mit denen wir unsere Aufgaben verwalten und die Kommunikation mit unseren Kunden und Partnern abwickeln. \n\nname in den Metadaten ist der Name des Absenders was in den meisten Fällen ein Kunde, Lieferant oder Partner von uns ist.\n\nIm content steht Zusammenfassung und Beschreibung des Vorgangs sowie alle Kommentare die mit dem Vorgang zu tun haben.\n\nAlle Vorgänge haben einen einzigartigen Vorgangsschlüssel der als issuekey in den Metadaten gespeichert ist und auch oft im Text vorkommt. Alle Informationen mit demselben Issuekey gehören zu einem eindeutigen Vorgang der vorrangig ein Thema behandelt. Wir nennen den Issuekey Vorgangsschlüssel. Falls sich deine Antwort auf einen konkreten Vorgang bezieht: gib einen ganzen Satz zurück, fasse den Vorgang kurz zusammen und nenne den Vorgangsschlüssel als Antwort auf die Frage: {{ $json.chatInput }}"
      },
      "id": "621ac394-4a8b-4727-a1f1-a06d26213b32",
      "name": "Question and Answer Chain1",
      "type": "@n8n/n8n-nodes-langchain.chainRetrievalQa",
      "typeVersion": 1.3,
      "position": [
        1660,
        1440
      ]
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {
          "responseFormat": "text"
        },
        "requestOptions": {}
      },
      "id": "51fba693-4fb0-4687-9f01-65b13ad78c5a",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1660,
        1660
      ],
      "credentials": {
        "openAiApi": {
          "id": "yiuOd1rh4VvrteZZ",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "topK": 10,
        "requestOptions": {}
      },
      "id": "453b27b1-e383-4ac3-bd46-f372cd637711",
      "name": "Vector Store Retriever1",
      "type": "@n8n/n8n-nodes-langchain.retrieverVectorStore",
      "typeVersion": 1,
      "position": [
        1860,
        1660
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {},
        "requestOptions": {}
      },
      "id": "e21c3217-d1c2-404e-b5d4-a663c168c33b",
      "name": "Embeddings OpenAI2",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        2240,
        2020
      ],
      "credentials": {
        "openAiApi": {
          "id": "yiuOd1rh4VvrteZZ",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 865.4939420043546,
        "width": 1338.0380071708787,
        "color": 4
      },
      "id": "2269a246-3ab5-4532-819d-0dbf86d86fee",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1220,
        1340
      ]
    },
    {
      "parameters": {
        "resource": "issueComment",
        "operation": "getAll",
        "issueKey": "={{ $json.key }}",
        "returnAll": true,
        "options": {
          "expand": "renderedBody"
        }
      },
      "id": "435aad5d-2fab-453a-8d32-e6f47451c6cc",
      "name": "Get comments",
      "type": "n8n-nodes-base.jira",
      "typeVersion": 1,
      "position": [
        1520,
        960
      ],
      "alwaysOutputData": true,
      "credentials": {
        "jiraSoftwareCloudApi": {
          "id": "EdAKPJ9r1366gZwb",
          "name": "Jira christian.gick@clicksports.de"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "getAll",
        "limit": 1,
        "options": {
          "expand": [],
          "fields": "summary,description,reporter,status",
          "jql": "filter=29253"
        }
      },
      "id": "df8a827e-3a74-4882-a437-dfd50cfdd892",
      "name": "Get issues to index",
      "type": "n8n-nodes-base.jira",
      "typeVersion": 1,
      "position": [
        960,
        580
      ],
      "credentials": {
        "jiraSoftwareCloudApi": {
          "id": "EdAKPJ9r1366gZwb",
          "name": "Jira christian.gick@clicksports.de"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8b408d9f-f53b-49d6-81ac-5b8f08ca72c3",
              "name": "renderedBody",
              "value": "={{ $json.author.displayName }} schreibt am {{ $json.created.toDateTime().format(\"dd.LL.yyyy\") }}: {{ $json.renderedBody }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "952b5400-76bb-4a04-8aad-128eaa6cfbcb",
      "name": "Match author with comments",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1960,
        940
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "comments",
        "options": {}
      },
      "id": "1a5e0ef5-fe14-4156-80cc-8886ce51415a",
      "name": "Split comments",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2480,
        960
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "comments"
            }
          ]
        },
        "options": {
          "mergeLists": true
        }
      },
      "id": "b1e9a548-d6a5-4adf-95aa-124f43ce763a",
      "name": "Aggregate clean comments",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2720,
        960
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "renderedBody",
              "renameField": true,
              "outputFieldName": "comments"
            }
          ]
        },
        "options": {}
      },
      "id": "8b32f64b-4ec8-4b82-b1e4-195e6b93b039",
      "name": "Aggregate raw comments",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2220,
        940
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "7a2774f6-f18f-4c80-89b9-9cffc4a74193",
      "name": "Merge issue with its comments",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        3060,
        820
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "function extractText(text) {\n    // Remove specific JSON structures and unwanted fragments\n    let cleanedText = text\n        // Remove image placeholders\n        .replace(/!image001\\.png\\|thumbnail!{adf}>/g, '')\n        // Remove specific JSON structures\n        .replace(/{\"type\":\"(?:expand|paragraph|table)\",\"content\":\\[(?:\\{\"type\":\"(?:text|tableRow|tableCell|hardBreak)\",\"text\":\"[^\"]*\"\\},?)*\\]\\},?/g, '')\n        // Remove HTML tags\n        .replace(/<\\/?[^>]+(>|$)/g, '')\n        // Remove excessive whitespace\n        .replace(/\\n+/g, ' ')\n        .replace(/\\s+/g, ' ')\n        .trim();\n    return cleanedText;\n}\n\nreturn {\n    json: { \"data\": [ {\n      \n        id: $json.key,\n        content: ($json.fields.summary ? $json.key + ': ' + $json.fields.summary : '') +\n                 ($json.fields.description ? ', ' + extractText($json.fields.description) : '') +\n                 ($json.comments && $json.comments.length > 0 ? ', ' + extractText($json.comments.join('\\n')) : ''),\n        metadata: {\n            issuekey: $json.key,\n            status: $json.fields.status.name,\n            reporter: {\n                name: $json.fields.reporter.displayName,\n                email: $json.fields.reporter.emailAddress\n            }\n        }\n    }\n                     ] }\n};\n\n"
      },
      "id": "3816d767-6c9d-4164-96dd-9e5b27432891",
      "name": "Vector model",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4480,
        640
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "mergeByFields": {
          "values": [
            {
              "field1": "key",
              "field2": "pageContent"
            }
          ]
        },
        "options": {
          "multipleMatches": "first"
        }
      },
      "id": "15b43798-1888-46b9-a0fc-153c6cdefaba",
      "name": "Indexed successfully",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        5900,
        200
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "77da511c-8804-403a-857d-87bda29b1409",
      "name": "Loop over issues",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1240,
        820
      ]
    },
    {
      "parameters": {
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=issuekey",
                "value": "={{ $('Vector model').item.json.data[0].metadata.issuekey }}"
              },
              {
                "name": "=name",
                "value": "={{ $('Vector model').item.json.data[0].metadata.reporter.name }}"
              },
              {
                "name": "email",
                "value": "={{ $('Vector model').item.json.data[0].metadata.reporter.email }}"
              }
            ]
          }
        },
        "requestOptions": {}
      },
      "id": "6aa59307-7d51-4ba0-98b8-1ea6c75e283e",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        4980,
        940
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "f7976ec9-db61-4426-8b19-6d206c3a8ffc",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        4180,
        720
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "073de083-fac8-4579-8110-3c7a14aab94b",
              "leftValue": "={{ $json.fields.description }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "a2365b95-bfbd-4dbd-8c64-93b5059bd2d8",
              "leftValue": "={{ $json.comments[0].length }}",
              "rightValue": 20,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "96ac481d-b11f-4f7b-b82e-0b3be289e33d",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3260,
        660
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes"
            }
          ]
        }
      },
      "id": "3e1aeef0-63e2-4537-8ef5-18592af0778c",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        640,
        580
      ]
    },
    {
      "parameters": {},
      "id": "72f11c15-e663-4d38-893a-c3356233a7d1",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1,
      "position": [
        1380,
        1420
      ],
      "webhookId": "09126092-4ce1-49ca-a11b-f68c212cc365"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8d02fb22-7c39-4ec4-b7de-19d8f8e0ef76",
              "leftValue": "={{ $json.renderedBody }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "905eabaf-cd40-44d9-a3f3-11fe3024ac7f",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1740,
        960
      ]
    },
    {
      "parameters": {
        "pineconeIndex": {
          "__rl": true,
          "value": "n8n",
          "mode": "list",
          "cachedResultName": "n8n"
        },
        "options": {
          "pineconeNamespace": "issues"
        }
      },
      "id": "321c1ed2-1dd6-459d-92bc-62b9499fef65",
      "name": "Pinecone Vector Store2",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        2240,
        1800
      ],
      "credentials": {
        "pineconeApi": {
          "id": "JtVJ99Ey7P7QCuTI",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-3.5-turbo",
          "mode": "list",
          "cachedResultName": "GPT-3.5-TURBO"
        },
        "messages": {
          "values": [
            {
              "content": "=Verwende Normalisierung und Lemmatisierung um unnötige Tags, Trennzeichen und Satzzeichen zu entfernen. Das Ergebnis soll optimal sein um später für Pinecone vektorisiert zu werden. Keine Kommentare von dir. Kein HTML, nur reiner Text. Aus der Signatur musst du nur den Firmennamen, die Telefonnummern und Mailadresse berücksichtigen. Pro Konversation bitte nur eine Variable zurückgeben nach dem Schema Von Absendername: Textkörper. Sender und message sollen nicht getrennt werden. Die Variable soll keinen Namen bekommen sondern nur eine Nummer:\n\n{{ $json.fields.description }}\n\n{{ $json.comments }}",
              "role": "system"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "id": "c48f76e2-f06c-4393-9f3c-e65f31214099",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.4,
      "position": [
        3720,
        500
      ],
      "credentials": {
        "openAiApi": {
          "id": "yiuOd1rh4VvrteZZ",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "n8n",
          "mode": "list",
          "cachedResultName": "n8n"
        },
        "options": {
          "clearNamespace": false,
          "pineconeNamespace": "issues"
        }
      },
      "id": "92ecb907-32b4-4c1d-9ba1-0d42e383a5a0",
      "name": "Pinecone Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        4800,
        640
      ],
      "credentials": {
        "pineconeApi": {
          "id": "JtVJ99Ey7P7QCuTI",
          "name": "PineconeApi account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Question and Answer Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Vector Store Retriever1": {
      "ai_retriever": [
        [
          {
            "node": "Question and Answer Chain1",
            "type": "ai_retriever",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI2": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store2",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Get comments": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get issues to index": {
      "main": [
        [
          {
            "node": "Indexed successfully",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge issue with its comments",
            "type": "main",
            "index": 0
          },
          {
            "node": "Loop over issues",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Match author with comments": {
      "main": [
        [
          {
            "node": "Aggregate raw comments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split comments": {
      "main": [
        [
          {
            "node": "Aggregate clean comments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate clean comments": {
      "main": [
        [
          {
            "node": "Loop over issues",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate raw comments": {
      "main": [
        [
          {
            "node": "Split comments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge issue with its comments": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Indexed successfully": {
      "main": [
        [
          {
            "node": "Set index timestamp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop over issues": {
      "main": [
        [
          {
            "node": "Merge issue with its comments",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Get comments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Vector model": {
      "main": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Vector model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get issues to index",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Question and Answer Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Match author with comments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store2": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Store Retriever1",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "main": [
        [
          {
            "node": "Indexed successfully",
            "type": "main",
            "index": 1
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d5301d30-edff-4a88-adaf-a842a0ffc797",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "56fc812360391141cb9ac505c6be68147adf1858bd8b2dd9bdae3c3202be4a50"
  },
  "id": "O5h8fYBmoTKoTZey",
  "tags": [
    {
      "createdAt": "2024-07-05T08:08:00.361Z",
      "updatedAt": "2024-07-05T08:08:00.361Z",
      "id": "PnvLO7jNQ3TYpmzx",
      "name": "rag"
    }
  ]
}