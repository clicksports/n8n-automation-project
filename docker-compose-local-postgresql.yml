services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: n8n-postgres-local
    restart: unless-stopped
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=n8n_user
      - POSTGRES_PASSWORD=n8n_password
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - n8n-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n_user -d n8n"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgREST API Server
  postgrest:
    image: postgrest/postgrest:v12.0.2
    container_name: n8n-postgrest
    restart: unless-stopped
    environment:
      - PGRST_DB_URI=postgres://n8n_user:n8n_password@postgres:5432/n8n
      - PGRST_DB_SCHEMAS=public
      - PGRST_DB_ANON_ROLE=n8n_user
      - PGRST_JWT_SECRET=your-jwt-secret-here-change-this
      - PGRST_DB_USE_LEGACY_GUCS=false
    ports:
      - "3000:3000"
    networks:
      - n8n-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # n8n Application
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n-production
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_RUNNERS_ENABLED=true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - NODE_ENV=production
      # PostgreSQL Configuration
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n_user
      - DB_POSTGRESDB_PASSWORD=n8n_password
      - DB_POSTGRESDB_SSL_ENABLED=false
      # Additional PostgreSQL settings
      - DB_POSTGRESDB_POOL_SIZE=10
      - DB_POSTGRESDB_CONNECTION_TIMEOUT=30000
    volumes:
      - n8n_data:/home/node/.n8n
      - n8n_files:/home/node/.n8n/binaryData
      - ./workflows:/home/node/.n8n/workflows:ro
    networks:
      - n8n-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # pgAdmin (Optional - Database Management UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: n8n-pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@n8n.local
      - PGADMIN_DEFAULT_PASSWORD=admin123
      - PGADMIN_CONFIG_SERVER_MODE=False
    ports:
      - "8080:80"
    networks:
      - n8n-network
    depends_on:
      - postgres
    profiles:
      - admin

volumes:
  n8n_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/docker
  n8n_files:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/docker/binaryData
  postgres_data:
    driver: local

networks:
  n8n-network:
    driver: bridge